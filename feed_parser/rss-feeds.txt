RSS는 일종의 data structure로, feed의 표준적인 콘텐츠 표현 방식이라 보면 되겠다.
비슷한 feed data structure로 Atom이 있음.
아래는 대표적인 RSS structure.
--------------------------------------------
<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
 <title>RSS Title</title>
 <description>This is an example of an RSS feed</description>
 <link>http://www.example.com/main.html</link>
 <lastBuildDate>Mon, 06 Sep 2010 00:01:00 +0000 </lastBuildDate>
 <pubDate>Sun, 06 Sep 2009 16:20:00 +0000</pubDate>
 <ttl>1800</ttl>

 <item>
  <title>Example entry</title>
  <description>Here is some text containing an interesting description.</description>
  <link>http://www.example.com/blog/post/1</link>
  <guid isPermaLink="true">7bd204c6-1655-4c27-aeee-53f933c5395f</guid>
  <pubDate>Sun, 06 Sep 2009 16:20:00 +0000</pubDate>
 </item>

</channel>
</rss>
--------------------------------------------

RSS의 element(혹은 attribute)에는
author, category, copyright등과 같이 feed를 배포하는 배포자의 정보를 담는 요소들도 있고,
title, summary, url,published, guid등과 같이 각각의 feed entry의 정보를 담는 요소들도 있다. (guid: global unique identifier)


<내 rails app에 feed 받아들이기>

1. Gemfile에 gem 'feedjira'
2. > bundle install
3. > generate model feed_entry title:string summary:text url:string published_at:datetime guid:string
4. > rake db:migrate
5. FeedEntry.rb 모델에 다음의 코드 넣기
--------------------------------------------
class FeedEntry < ApplicationRecord
  
  default_scope{ order("published_at desc")}
  
  def self.update_from_feed(feed_url)
    feed = Feedjira::Feed.fetch_and_parse(feed_url)
    add_entries(feed.entries)
  end
  
  private
  
  def self.add_entries(entries)
    entries.each do |entry|
      unless exists? :guid => entry.id
        create!(
          :title        => entry.title,
          :summary      => entry.summary,
          :url          => entry.url,
          :published_at => entry.published,
          :guid         => entry.id
        )
      end
    end
  end
end
--------------------------------------------


7. 해당 feed가 들어가길 원하는 view.html.erb에다가 다음 div 삽입.
--------------------------------------------
<div id="recent_feeds">
  <h4><b>Recent feeds</b></h4>
  <ul>
    <% for entry in FeedEntry.all.limit(10) %>
      <li><%= link_to entry.title+", "+entry.published_at.strftime("%Y/%m/%d"), entry.url, :target => "_blank" %></li>
    <% end %>
  </ul>
</div>
--------------------------------------------

8. 해당 view를 관장하는 Controller에다가 다음 코드 삽입.
--------------------------------------------
  before_action :set_feeds
  .....
  private
  ....
  def set_feeds
    @feed_url = "원하는 rss publishing url"
    FeedEntry.update_from_feed(@feed_url)
  end
--------------------------------------------
